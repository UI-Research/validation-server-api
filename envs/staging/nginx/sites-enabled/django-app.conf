upstream web {
  server 127.0.0.1:8000;
}

upstream app {
  server localhost:3000;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
          listen 443 ssl;

          ssl_certificate           /etc/nginx/ssl/validation-server-stg.urban.org.pem;
          ssl_certificate_key       /etc/nginx/ssl/validation-server-stg.urban.org.key;
					ssl_dhparam               /etc/nginx/ssl/DH_validation-server-stg.pem;
          ssl_protocols             TLSv1.2 TLSv1.3;
          ssl_ciphers               HIGH:!aNULL:!MD5;
          ssl_prefer_server_ciphers on;
          ssl_verify_client         off;
          
          charset utf-8;

					client_max_body_size 2000M;
					client_body_timeout 2000s;

          access_log  /var/log/nginx/access.log  main;
          error_log /var/log/nginx/error.log;
          server_name validation-server-stg.urban.org;

          location ~* \.(eot|ttf|woff|woff2)$ {
              add_header Access-Control-Allow-Origin *;
          }

          #location / {
          #  return 302 https://$host/data-explorer/;
          #}

          location /api {
            include                 /etc/nginx/uwsgi_params;
            include                 /etc/nginx/mime.types;
            proxy_pass              http://web;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Ssl on;
            proxy_set_header        X-Forwarded-Proto https;
          }

          location / {
            include                 /etc/nginx/uwsgi_params;
            include                 /etc/nginx/mime.types;
            auth_basic              "Authentication Required";
            auth_basic_user_file    /etc/apache2/.htpasswd;
            proxy_pass              http://app;
            proxy_redirect          off;
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Ssl on;
            proxy_set_header        X-Forwarded-Proto https;
          }

					location /static/  {
		        autoindex    on;
		        alias /code/static/;
		      }


}