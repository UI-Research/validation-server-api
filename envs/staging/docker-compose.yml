version: '2'

services:
  app:
    container_name: app
    image: app
    build:
      context: ./validation-server-frontend/services/app/
      dockerfile: dev.DockerFile
    environment:
      # Force polling instead of watching to work around Docker osxfs issues.
      CHOKIDAR_USEPOLLING: '1'
      CHOKIDAR_INTERVAL: '1000'
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./validation-server-frontend/services/app/components:/app/components:cached
      - ./validation-server-frontend/services/app/pages:/app/pages:cached
      - ./validation-server-frontend/services/app/public:/app/public:cached
      - ./validation-server-frontend/services/app/styles:/app/styles:cached
  nginx:
    container_name: proxy
    restart: always
    build:
      context: ./nginx/
      args: 
        NGINX_PASSWORD: ${NGINX_PASSWORD}
        NGINX_USER: ${NGINX_USER}
    image: proxy
    env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/log/nginx:/var/log/nginx
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - ./nginx/ssl:/etc/nginx/ssl
    volumes_from:
      - web
      - app
    links:
     - web:web
     - app:app
  mysql:
    container_name: mysql
    image: mysql:5.7
    restart: always
    ports:
      - "3306:3306"
    env_file: .env
    volumes:
      - ./WebApp/scripts/:/scripts
  web:
    container_name: web
    restart: always
    env_file: .env
    image: web
    build: ./
    command: >
        bash -c "python wait_for_mysql.py &&
        ./manage.py migrate &&
        ./manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/code
    ports:
      - "8000:8000"
    depends_on:
      - mysql

   
