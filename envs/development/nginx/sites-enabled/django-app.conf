server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name _;
	return 301 https://$host$request_uri;
}

server {
  
  listen 443 ssl;
  
  ssl_certificate           /etc/nginx/ssl/cert.pem;
  ssl_certificate_key       /etc/nginx/ssl/key.pem;
  ssl_protocols             TLSv1.2 TLSv1.3;
  ssl_ciphers               HIGH:!aNULL:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_verify_client         off;
  charset utf-8;

	client_max_body_size 2000M;
	client_body_timeout 2000s; 
  
  access_log  /var/log/nginx/access.log  main;

          location ~* \.(eot|ttf|woff|woff2)$ {
              add_header Access-Control-Allow-Origin *;
          }

          location / {
            
            include /etc/nginx/uwsgi_params;
            include  /etc/nginx/mime.types;
            proxy_pass http://web:8000;
						proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
						proxy_connect_timeout   2000s;
	          proxy_send_timeout      2000s;
	          proxy_read_timeout      2000s;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

           if ($request_method = 'OPTIONS') {
              add_header 'Access-Control-Allow-Origin' '*';
              #
              # Om nom nom cookies
              #
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              #
              # Custom headers and headers various browsers *should* be OK with but aren't
              #
              add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
              #
              # Tell client that this pre-flight info is valid for 20 days
              #
              add_header 'Access-Control-Max-Age' 1728000;
              add_header 'Content-Type' 'text/plain charset=UTF-8';
              add_header 'Content-Length' 0;
              return 204;
           }
           if ($request_method = 'POST') {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
           }
           if ($request_method = 'GET') {
              add_header 'Access-Control-Allow-Origin' '*';
              add_header 'Access-Control-Allow-Credentials' 'true';
              add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
              add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
           }

          }

					location /static/  {
		        autoindex    on;
		        alias /code/static/;
		      }



}